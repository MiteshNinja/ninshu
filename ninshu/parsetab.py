
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0AD140AFCB1CBFE377E78AA753D3FE56'
    
_lr_action_items = {'JUTSU':([0,2,7,8,9,12,20,23,24,42,46,],[5,-5,5,-1,-3,-8,-7,-2,-6,-4,-9,]),'MULT':([3,6,10,14,15,25,30,31,32,33,35,37,38,39,],[18,-21,-20,-21,18,-19,18,-18,-17,18,18,18,18,18,]),'{':([5,10,13,14,25,30,31,32,33,37,38,39,43,],[21,-20,26,-21,-19,-16,-18,-17,-15,-12,-10,-11,44,]),'=':([6,],[22,]),'ID':([0,1,2,7,8,9,11,12,16,17,18,19,20,21,22,23,24,26,27,28,29,34,36,42,44,45,46,],[6,14,-5,6,-1,6,14,-8,14,14,14,14,-7,6,14,-2,-6,6,14,14,14,6,6,-4,6,6,-9,]),'YANG':([41,],[43,]),'}':([2,12,20,24,34,36,45,46,],[-5,-8,-7,-6,40,41,46,-9,]),'DIV':([3,6,10,14,15,25,30,31,32,33,35,37,38,39,],[17,-21,-20,-21,17,-19,17,-18,-17,17,17,17,17,17,]),'PLUS':([3,6,10,14,15,25,30,31,32,33,35,37,38,39,],[19,-21,-20,-21,19,-19,-16,-18,-17,-15,19,19,19,19,]),'SEAL':([40,],[42,]),'<':([10,14,15,25,30,31,32,33,],[-20,-21,29,-19,-16,-18,-17,-15,]),'YIN':([0,2,7,8,9,12,20,21,23,24,26,34,36,42,44,45,46,],[1,-5,1,-1,1,-8,-7,1,-2,-6,1,1,1,-4,1,1,-9,]),'$end':([2,7,8,9,12,20,23,24,42,46,],[-5,0,-1,-3,-8,-7,-2,-6,-4,-9,]),'NUMBER':([0,1,2,7,8,9,11,12,16,17,18,19,20,21,22,23,24,26,27,28,29,34,36,42,44,45,46,],[10,10,-5,10,-1,10,10,-8,10,10,10,10,-7,10,10,-2,-6,10,10,10,10,10,10,-4,10,10,-9,]),'EQ':([10,14,15,25,30,31,32,33,],[-20,-21,27,-19,-16,-18,-17,-15,]),'MINUS':([0,1,2,3,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,45,46,],[11,11,-5,16,-21,11,-1,11,-20,11,-8,-21,16,11,11,11,11,-7,11,11,-2,-6,-19,11,11,11,11,-16,-18,-17,-15,11,16,11,16,16,16,-4,11,11,-9,]),';':([3,4,6,10,14,25,30,31,32,33,35,],[-14,20,-21,-20,-21,-19,-16,-18,-17,-15,-13,]),'>':([10,14,15,25,30,31,32,33,],[-20,-21,28,-19,-16,-18,-17,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'hand_sign':([0,7,9,21,26,34,36,44,45,],[4,4,4,4,4,4,4,4,4,]),'showdown':([0,],[7,]),'move':([0,7,9,21,26,34,36,44,45,],[2,2,24,2,2,24,24,2,24,]),'predicate':([1,],[13,]),'expression':([0,1,7,9,11,16,17,18,19,21,22,26,27,28,29,34,36,44,45,],[3,15,3,3,25,30,31,32,33,3,35,3,37,38,39,3,3,3,3,]),'combo_move':([0,7,21,26,44,],[9,9,34,36,45,]),'yinyang':([0,7,9,21,26,34,36,44,45,],[12,12,12,12,12,12,12,12,12,]),'chakra':([0,7,],[8,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> showdown","S'",1,None,None,None),
  ('showdown -> chakra','showdown',1,'p_ninja_showdown','parser.py',30),
  ('showdown -> showdown chakra','showdown',2,'p_ninja_showdown','parser.py',31),
  ('chakra -> combo_move','chakra',1,'p_chakra','parser.py',43),
  ('chakra -> JUTSU { combo_move } SEAL','chakra',5,'p_chakra','parser.py',44),
  ('combo_move -> move','combo_move',1,'p_combo_move','parser.py',54),
  ('combo_move -> combo_move move','combo_move',2,'p_combo_move','parser.py',55),
  ('move -> hand_sign ;','move',2,'p_move','parser.py',70),
  ('move -> yinyang','move',1,'p_move','parser.py',71),
  ('yinyang -> YIN predicate { combo_move } YANG { combo_move }','yinyang',9,'p_yinyang','parser.py',77),
  ('predicate -> expression > expression','predicate',3,'p_predicate','parser.py',84),
  ('predicate -> expression < expression','predicate',3,'p_predicate','parser.py',85),
  ('predicate -> expression EQ expression','predicate',3,'p_predicate','parser.py',86),
  ('hand_sign -> ID = expression','hand_sign',3,'p_hand_sign','parser.py',92),
  ('hand_sign -> expression','hand_sign',1,'p_hand_sign','parser.py',93),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',103),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',104),
  ('expression -> expression MULT expression','expression',3,'p_expression_binop','parser.py',105),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','parser.py',106),
  ('expression -> MINUS expression','expression',2,'p_expression_UMINUS','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_variable','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_ID','parser.py',124),
]
