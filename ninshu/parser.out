Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    MISS
    LPAREN
    RPAREN
    THROW
    SHURIKENS
    REFILL

Grammar

Rule 0     S' -> showdown
Rule 1     showdown -> chakra
Rule 2     showdown -> showdown chakra
Rule 3     chakra -> combo_move
Rule 4     chakra -> JUTSU { combo_move } SEAL
Rule 5     combo_move -> move
Rule 6     combo_move -> combo_move move
Rule 7     move -> hand_sign ;
Rule 8     move -> yinyang
Rule 9     yinyang -> YIN predicate { combo_move } YANG { combo_move }
Rule 10    predicate -> expression > expression
Rule 11    predicate -> expression < expression
Rule 12    predicate -> expression EQ expression
Rule 13    hand_sign -> ID = expression
Rule 14    hand_sign -> expression
Rule 15    expression -> expression PLUS expression
Rule 16    expression -> expression MINUS expression
Rule 17    expression -> expression MULT expression
Rule 18    expression -> expression DIV expression
Rule 19    expression -> MINUS expression
Rule 20    expression -> NUMBER
Rule 21    expression -> ID

Terminals, with rules where they appear

;                    : 7
<                    : 11
=                    : 13
>                    : 10
DIV                  : 18
EQ                   : 12
ID                   : 13 21
JUTSU                : 4
LPAREN               : 
MINUS                : 16 19
MISS                 : 
MULT                 : 17
NUMBER               : 20
PLUS                 : 15
REFILL               : 
RPAREN               : 
SEAL                 : 4
SHURIKENS            : 
THROW                : 
YANG                 : 9
YIN                  : 9
error                : 
{                    : 4 9 9
}                    : 4 9 9

Nonterminals, with rules where they appear

chakra               : 1 2
combo_move           : 3 4 6 9 9
expression           : 10 10 11 11 12 12 13 14 15 15 16 16 17 17 18 18 19
hand_sign            : 7
move                 : 5 6
predicate            : 9
showdown             : 2 0
yinyang              : 8

Parsing method: LALR

state 0

    (0) S' -> . showdown
    (1) showdown -> . chakra
    (2) showdown -> . showdown chakra
    (3) chakra -> . combo_move
    (4) chakra -> . JUTSU { combo_move } SEAL
    (5) combo_move -> . move
    (6) combo_move -> . combo_move move
    (7) move -> . hand_sign ;
    (8) move -> . yinyang
    (13) hand_sign -> . ID = expression
    (14) hand_sign -> . expression
    (9) yinyang -> . YIN predicate { combo_move } YANG { combo_move }
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    JUTSU           shift and go to state 5
    ID              shift and go to state 10
    YIN             shift and go to state 11
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7

    chakra                         shift and go to state 9
    showdown                       shift and go to state 1
    hand_sign                      shift and go to state 6
    combo_move                     shift and go to state 8
    move                           shift and go to state 2
    expression                     shift and go to state 3
    yinyang                        shift and go to state 4

state 1

    (0) S' -> showdown .
    (2) showdown -> showdown . chakra
    (3) chakra -> . combo_move
    (4) chakra -> . JUTSU { combo_move } SEAL
    (5) combo_move -> . move
    (6) combo_move -> . combo_move move
    (7) move -> . hand_sign ;
    (8) move -> . yinyang
    (13) hand_sign -> . ID = expression
    (14) hand_sign -> . expression
    (9) yinyang -> . YIN predicate { combo_move } YANG { combo_move }
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    JUTSU           shift and go to state 5
    ID              shift and go to state 10
    YIN             shift and go to state 11
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7

    chakra                         shift and go to state 13
    hand_sign                      shift and go to state 6
    combo_move                     shift and go to state 8
    move                           shift and go to state 2
    expression                     shift and go to state 3
    yinyang                        shift and go to state 4

state 2

    (5) combo_move -> move .

    ID              reduce using rule 5 (combo_move -> move .)
    YIN             reduce using rule 5 (combo_move -> move .)
    MINUS           reduce using rule 5 (combo_move -> move .)
    NUMBER          reduce using rule 5 (combo_move -> move .)
    JUTSU           reduce using rule 5 (combo_move -> move .)
    $end            reduce using rule 5 (combo_move -> move .)
    }               reduce using rule 5 (combo_move -> move .)


state 3

    (14) hand_sign -> expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULT expression
    (18) expression -> expression . DIV expression

    ;               reduce using rule 14 (hand_sign -> expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 14
    MULT            shift and go to state 17
    DIV             shift and go to state 15


state 4

    (8) move -> yinyang .

    ID              reduce using rule 8 (move -> yinyang .)
    YIN             reduce using rule 8 (move -> yinyang .)
    MINUS           reduce using rule 8 (move -> yinyang .)
    NUMBER          reduce using rule 8 (move -> yinyang .)
    JUTSU           reduce using rule 8 (move -> yinyang .)
    $end            reduce using rule 8 (move -> yinyang .)
    }               reduce using rule 8 (move -> yinyang .)


state 5

    (4) chakra -> JUTSU . { combo_move } SEAL

    {               shift and go to state 18


state 6

    (7) move -> hand_sign . ;

    ;               shift and go to state 19


state 7

    (20) expression -> NUMBER .

    PLUS            reduce using rule 20 (expression -> NUMBER .)
    MINUS           reduce using rule 20 (expression -> NUMBER .)
    MULT            reduce using rule 20 (expression -> NUMBER .)
    DIV             reduce using rule 20 (expression -> NUMBER .)
    ;               reduce using rule 20 (expression -> NUMBER .)
    >               reduce using rule 20 (expression -> NUMBER .)
    <               reduce using rule 20 (expression -> NUMBER .)
    EQ              reduce using rule 20 (expression -> NUMBER .)
    {               reduce using rule 20 (expression -> NUMBER .)


state 8

    (3) chakra -> combo_move .
    (6) combo_move -> combo_move . move
    (7) move -> . hand_sign ;
    (8) move -> . yinyang
    (13) hand_sign -> . ID = expression
    (14) hand_sign -> . expression
    (9) yinyang -> . YIN predicate { combo_move } YANG { combo_move }
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for YIN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    JUTSU           reduce using rule 3 (chakra -> combo_move .)
    $end            reduce using rule 3 (chakra -> combo_move .)
    ID              shift and go to state 10
    YIN             shift and go to state 11
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7

  ! ID              [ reduce using rule 3 (chakra -> combo_move .) ]
  ! YIN             [ reduce using rule 3 (chakra -> combo_move .) ]
  ! MINUS           [ reduce using rule 3 (chakra -> combo_move .) ]
  ! NUMBER          [ reduce using rule 3 (chakra -> combo_move .) ]

    move                           shift and go to state 20
    hand_sign                      shift and go to state 6
    expression                     shift and go to state 3
    yinyang                        shift and go to state 4

state 9

    (1) showdown -> chakra .

    JUTSU           reduce using rule 1 (showdown -> chakra .)
    ID              reduce using rule 1 (showdown -> chakra .)
    YIN             reduce using rule 1 (showdown -> chakra .)
    MINUS           reduce using rule 1 (showdown -> chakra .)
    NUMBER          reduce using rule 1 (showdown -> chakra .)
    $end            reduce using rule 1 (showdown -> chakra .)


state 10

    (13) hand_sign -> ID . = expression
    (21) expression -> ID .

    =               shift and go to state 21
    PLUS            reduce using rule 21 (expression -> ID .)
    MINUS           reduce using rule 21 (expression -> ID .)
    MULT            reduce using rule 21 (expression -> ID .)
    DIV             reduce using rule 21 (expression -> ID .)
    ;               reduce using rule 21 (expression -> ID .)


state 11

    (9) yinyang -> YIN . predicate { combo_move } YANG { combo_move }
    (10) predicate -> . expression > expression
    (11) predicate -> . expression < expression
    (12) predicate -> . expression EQ expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7
    ID              shift and go to state 22

    predicate                      shift and go to state 23
    expression                     shift and go to state 24

state 12

    (19) expression -> MINUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7
    ID              shift and go to state 22

    expression                     shift and go to state 25

state 13

    (2) showdown -> showdown chakra .

    JUTSU           reduce using rule 2 (showdown -> showdown chakra .)
    ID              reduce using rule 2 (showdown -> showdown chakra .)
    YIN             reduce using rule 2 (showdown -> showdown chakra .)
    MINUS           reduce using rule 2 (showdown -> showdown chakra .)
    NUMBER          reduce using rule 2 (showdown -> showdown chakra .)
    $end            reduce using rule 2 (showdown -> showdown chakra .)


state 14

    (16) expression -> expression MINUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7
    ID              shift and go to state 22

    expression                     shift and go to state 26

state 15

    (18) expression -> expression DIV . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7
    ID              shift and go to state 22

    expression                     shift and go to state 27

state 16

    (15) expression -> expression PLUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7
    ID              shift and go to state 22

    expression                     shift and go to state 28

state 17

    (17) expression -> expression MULT . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7
    ID              shift and go to state 22

    expression                     shift and go to state 29

state 18

    (4) chakra -> JUTSU { . combo_move } SEAL
    (5) combo_move -> . move
    (6) combo_move -> . combo_move move
    (7) move -> . hand_sign ;
    (8) move -> . yinyang
    (13) hand_sign -> . ID = expression
    (14) hand_sign -> . expression
    (9) yinyang -> . YIN predicate { combo_move } YANG { combo_move }
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    ID              shift and go to state 10
    YIN             shift and go to state 11
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7

    move                           shift and go to state 2
    hand_sign                      shift and go to state 6
    combo_move                     shift and go to state 30
    expression                     shift and go to state 3
    yinyang                        shift and go to state 4

state 19

    (7) move -> hand_sign ; .

    ID              reduce using rule 7 (move -> hand_sign ; .)
    YIN             reduce using rule 7 (move -> hand_sign ; .)
    MINUS           reduce using rule 7 (move -> hand_sign ; .)
    NUMBER          reduce using rule 7 (move -> hand_sign ; .)
    JUTSU           reduce using rule 7 (move -> hand_sign ; .)
    $end            reduce using rule 7 (move -> hand_sign ; .)
    }               reduce using rule 7 (move -> hand_sign ; .)


state 20

    (6) combo_move -> combo_move move .

    ID              reduce using rule 6 (combo_move -> combo_move move .)
    YIN             reduce using rule 6 (combo_move -> combo_move move .)
    MINUS           reduce using rule 6 (combo_move -> combo_move move .)
    NUMBER          reduce using rule 6 (combo_move -> combo_move move .)
    JUTSU           reduce using rule 6 (combo_move -> combo_move move .)
    $end            reduce using rule 6 (combo_move -> combo_move move .)
    }               reduce using rule 6 (combo_move -> combo_move move .)


state 21

    (13) hand_sign -> ID = . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7
    ID              shift and go to state 22

    expression                     shift and go to state 31

state 22

    (21) expression -> ID .

    PLUS            reduce using rule 21 (expression -> ID .)
    MINUS           reduce using rule 21 (expression -> ID .)
    MULT            reduce using rule 21 (expression -> ID .)
    DIV             reduce using rule 21 (expression -> ID .)
    ;               reduce using rule 21 (expression -> ID .)
    >               reduce using rule 21 (expression -> ID .)
    <               reduce using rule 21 (expression -> ID .)
    EQ              reduce using rule 21 (expression -> ID .)
    {               reduce using rule 21 (expression -> ID .)


state 23

    (9) yinyang -> YIN predicate . { combo_move } YANG { combo_move }

    {               shift and go to state 32


state 24

    (10) predicate -> expression . > expression
    (11) predicate -> expression . < expression
    (12) predicate -> expression . EQ expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULT expression
    (18) expression -> expression . DIV expression

    >               shift and go to state 34
    <               shift and go to state 33
    EQ              shift and go to state 35
    PLUS            shift and go to state 16
    MINUS           shift and go to state 14
    MULT            shift and go to state 17
    DIV             shift and go to state 15


state 25

    (19) expression -> MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULT expression
    (18) expression -> expression . DIV expression

    PLUS            reduce using rule 19 (expression -> MINUS expression .)
    MINUS           reduce using rule 19 (expression -> MINUS expression .)
    MULT            reduce using rule 19 (expression -> MINUS expression .)
    DIV             reduce using rule 19 (expression -> MINUS expression .)
    ;               reduce using rule 19 (expression -> MINUS expression .)
    >               reduce using rule 19 (expression -> MINUS expression .)
    <               reduce using rule 19 (expression -> MINUS expression .)
    EQ              reduce using rule 19 (expression -> MINUS expression .)
    {               reduce using rule 19 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 14 ]
  ! MULT            [ shift and go to state 17 ]
  ! DIV             [ shift and go to state 15 ]


state 26

    (16) expression -> expression MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULT expression
    (18) expression -> expression . DIV expression

    PLUS            reduce using rule 16 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 16 (expression -> expression MINUS expression .)
    ;               reduce using rule 16 (expression -> expression MINUS expression .)
    >               reduce using rule 16 (expression -> expression MINUS expression .)
    <               reduce using rule 16 (expression -> expression MINUS expression .)
    EQ              reduce using rule 16 (expression -> expression MINUS expression .)
    {               reduce using rule 16 (expression -> expression MINUS expression .)
    MULT            shift and go to state 17
    DIV             shift and go to state 15

  ! MULT            [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 14 ]


state 27

    (18) expression -> expression DIV expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULT expression
    (18) expression -> expression . DIV expression

    PLUS            reduce using rule 18 (expression -> expression DIV expression .)
    MINUS           reduce using rule 18 (expression -> expression DIV expression .)
    MULT            reduce using rule 18 (expression -> expression DIV expression .)
    DIV             reduce using rule 18 (expression -> expression DIV expression .)
    ;               reduce using rule 18 (expression -> expression DIV expression .)
    >               reduce using rule 18 (expression -> expression DIV expression .)
    <               reduce using rule 18 (expression -> expression DIV expression .)
    EQ              reduce using rule 18 (expression -> expression DIV expression .)
    {               reduce using rule 18 (expression -> expression DIV expression .)

  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 14 ]
  ! MULT            [ shift and go to state 17 ]
  ! DIV             [ shift and go to state 15 ]


state 28

    (15) expression -> expression PLUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULT expression
    (18) expression -> expression . DIV expression

    PLUS            reduce using rule 15 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 15 (expression -> expression PLUS expression .)
    ;               reduce using rule 15 (expression -> expression PLUS expression .)
    >               reduce using rule 15 (expression -> expression PLUS expression .)
    <               reduce using rule 15 (expression -> expression PLUS expression .)
    EQ              reduce using rule 15 (expression -> expression PLUS expression .)
    {               reduce using rule 15 (expression -> expression PLUS expression .)
    MULT            shift and go to state 17
    DIV             shift and go to state 15

  ! MULT            [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 14 ]


state 29

    (17) expression -> expression MULT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULT expression
    (18) expression -> expression . DIV expression

    PLUS            reduce using rule 17 (expression -> expression MULT expression .)
    MINUS           reduce using rule 17 (expression -> expression MULT expression .)
    MULT            reduce using rule 17 (expression -> expression MULT expression .)
    DIV             reduce using rule 17 (expression -> expression MULT expression .)
    ;               reduce using rule 17 (expression -> expression MULT expression .)
    >               reduce using rule 17 (expression -> expression MULT expression .)
    <               reduce using rule 17 (expression -> expression MULT expression .)
    EQ              reduce using rule 17 (expression -> expression MULT expression .)
    {               reduce using rule 17 (expression -> expression MULT expression .)

  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 14 ]
  ! MULT            [ shift and go to state 17 ]
  ! DIV             [ shift and go to state 15 ]


state 30

    (4) chakra -> JUTSU { combo_move . } SEAL
    (6) combo_move -> combo_move . move
    (7) move -> . hand_sign ;
    (8) move -> . yinyang
    (13) hand_sign -> . ID = expression
    (14) hand_sign -> . expression
    (9) yinyang -> . YIN predicate { combo_move } YANG { combo_move }
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    }               shift and go to state 36
    ID              shift and go to state 10
    YIN             shift and go to state 11
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7

    move                           shift and go to state 20
    hand_sign                      shift and go to state 6
    expression                     shift and go to state 3
    yinyang                        shift and go to state 4

state 31

    (13) hand_sign -> ID = expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULT expression
    (18) expression -> expression . DIV expression

    ;               reduce using rule 13 (hand_sign -> ID = expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 14
    MULT            shift and go to state 17
    DIV             shift and go to state 15


state 32

    (9) yinyang -> YIN predicate { . combo_move } YANG { combo_move }
    (5) combo_move -> . move
    (6) combo_move -> . combo_move move
    (7) move -> . hand_sign ;
    (8) move -> . yinyang
    (13) hand_sign -> . ID = expression
    (14) hand_sign -> . expression
    (9) yinyang -> . YIN predicate { combo_move } YANG { combo_move }
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    ID              shift and go to state 10
    YIN             shift and go to state 11
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7

    move                           shift and go to state 2
    hand_sign                      shift and go to state 6
    combo_move                     shift and go to state 37
    expression                     shift and go to state 3
    yinyang                        shift and go to state 4

state 33

    (11) predicate -> expression < . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7
    ID              shift and go to state 22

    expression                     shift and go to state 38

state 34

    (10) predicate -> expression > . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7
    ID              shift and go to state 22

    expression                     shift and go to state 39

state 35

    (12) predicate -> expression EQ . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7
    ID              shift and go to state 22

    expression                     shift and go to state 40

state 36

    (4) chakra -> JUTSU { combo_move } . SEAL

    SEAL            shift and go to state 41


state 37

    (9) yinyang -> YIN predicate { combo_move . } YANG { combo_move }
    (6) combo_move -> combo_move . move
    (7) move -> . hand_sign ;
    (8) move -> . yinyang
    (13) hand_sign -> . ID = expression
    (14) hand_sign -> . expression
    (9) yinyang -> . YIN predicate { combo_move } YANG { combo_move }
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    }               shift and go to state 42
    ID              shift and go to state 10
    YIN             shift and go to state 11
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7

    move                           shift and go to state 20
    hand_sign                      shift and go to state 6
    expression                     shift and go to state 3
    yinyang                        shift and go to state 4

state 38

    (11) predicate -> expression < expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULT expression
    (18) expression -> expression . DIV expression

    {               reduce using rule 11 (predicate -> expression < expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 14
    MULT            shift and go to state 17
    DIV             shift and go to state 15


state 39

    (10) predicate -> expression > expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULT expression
    (18) expression -> expression . DIV expression

    {               reduce using rule 10 (predicate -> expression > expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 14
    MULT            shift and go to state 17
    DIV             shift and go to state 15


state 40

    (12) predicate -> expression EQ expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULT expression
    (18) expression -> expression . DIV expression

    {               reduce using rule 12 (predicate -> expression EQ expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 14
    MULT            shift and go to state 17
    DIV             shift and go to state 15


state 41

    (4) chakra -> JUTSU { combo_move } SEAL .

    JUTSU           reduce using rule 4 (chakra -> JUTSU { combo_move } SEAL .)
    ID              reduce using rule 4 (chakra -> JUTSU { combo_move } SEAL .)
    YIN             reduce using rule 4 (chakra -> JUTSU { combo_move } SEAL .)
    MINUS           reduce using rule 4 (chakra -> JUTSU { combo_move } SEAL .)
    NUMBER          reduce using rule 4 (chakra -> JUTSU { combo_move } SEAL .)
    $end            reduce using rule 4 (chakra -> JUTSU { combo_move } SEAL .)


state 42

    (9) yinyang -> YIN predicate { combo_move } . YANG { combo_move }

    YANG            shift and go to state 43


state 43

    (9) yinyang -> YIN predicate { combo_move } YANG . { combo_move }

    {               shift and go to state 44


state 44

    (9) yinyang -> YIN predicate { combo_move } YANG { . combo_move }
    (5) combo_move -> . move
    (6) combo_move -> . combo_move move
    (7) move -> . hand_sign ;
    (8) move -> . yinyang
    (13) hand_sign -> . ID = expression
    (14) hand_sign -> . expression
    (9) yinyang -> . YIN predicate { combo_move } YANG { combo_move }
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    ID              shift and go to state 10
    YIN             shift and go to state 11
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7

    move                           shift and go to state 2
    hand_sign                      shift and go to state 6
    combo_move                     shift and go to state 45
    expression                     shift and go to state 3
    yinyang                        shift and go to state 4

state 45

    (9) yinyang -> YIN predicate { combo_move } YANG { combo_move . }
    (6) combo_move -> combo_move . move
    (7) move -> . hand_sign ;
    (8) move -> . yinyang
    (13) hand_sign -> . ID = expression
    (14) hand_sign -> . expression
    (9) yinyang -> . YIN predicate { combo_move } YANG { combo_move }
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULT expression
    (18) expression -> . expression DIV expression
    (19) expression -> . MINUS expression
    (20) expression -> . NUMBER
    (21) expression -> . ID

    }               shift and go to state 46
    ID              shift and go to state 10
    YIN             shift and go to state 11
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 7

    move                           shift and go to state 20
    hand_sign                      shift and go to state 6
    expression                     shift and go to state 3
    yinyang                        shift and go to state 4

state 46

    (9) yinyang -> YIN predicate { combo_move } YANG { combo_move } .

    }               reduce using rule 9 (yinyang -> YIN predicate { combo_move } YANG { combo_move } .)
    ID              reduce using rule 9 (yinyang -> YIN predicate { combo_move } YANG { combo_move } .)
    YIN             reduce using rule 9 (yinyang -> YIN predicate { combo_move } YANG { combo_move } .)
    MINUS           reduce using rule 9 (yinyang -> YIN predicate { combo_move } YANG { combo_move } .)
    NUMBER          reduce using rule 9 (yinyang -> YIN predicate { combo_move } YANG { combo_move } .)
    JUTSU           reduce using rule 9 (yinyang -> YIN predicate { combo_move } YANG { combo_move } .)
    $end            reduce using rule 9 (yinyang -> YIN predicate { combo_move } YANG { combo_move } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for YIN in state 8 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 8 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 8 resolved as shift
